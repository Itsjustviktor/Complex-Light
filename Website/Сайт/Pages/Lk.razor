@page "/Lk"
@inject Blazored.LocalStorage.ILocalStorageService oLocalStore
@inject UserService Service
@inject NavigationManager NavigationManager
<html>

<body>
    <div class="page-wrapper fhg-content">
        <div class="container page-inner ">

            <div class="wrapper body fc">

                <div class="userbar fc">
                    <div class="profile fr" style="margin-bottom: 2rem; margin-top: 2rem; text-align: right">
                        Здравствуйте, @name @name2 @name3
                        <b></b>
                        (<a style="color: #0094ff;" class="endsess" @onclick="ClearSession">Выход</a>)
                    </div>
                </div><!--очистка сессии-->

                <div class="decorated-title-wrapper">
                    <div class="decorated-title">
                        <div class="page-header-wrapper">
                            <h1 class="page-header">
                                Кабинет покупателя. Заказы
                            </h1>
                        </div>
                    </div>
                </div>

                <div class="set wide_set">

                    <div class="set-title">История заказов</div>
                    <div class="set-block">
                        @if (sortedorder.Count == 0)
                        {
                            <div class="notice notice-info text-center aboba">
                                На данный момент вы не сделали ни одного заказа
                            </div>
                            <button class="co-button co-button--checkout aboba aboba1" @onclick="click">Перейти в каталог</button><!--проверка заказов-->
                        }

                        else
                        {
                            <table class="table table1">
                                <thead>
                                    <tr>
                                        <th>Номер заказа</th>
                                        <th>Дата заказа</th>
                                        <th>Статус заказа</th>
                                        <th>Оплата</th>
                                        <th class="order_amount">Стоимость</th>
                                        <th>Трек номер</th>
                                    </tr>
                                </thead>
                                <tbody>

                                    @foreach (var i in sortedorder)
                                    {
                                        <tr class="highlited_row ">
                                            <td><a><div>@i.Idorder</div></a></td>
                                            <td><a><div>@i.Date</div></a></td>
                                            <td><a><div>@i.Paymentmethod</div></a></td>
                                            <td>
                                                <a>
                                                    <div>
                                                        <span>
                                                            @i.Status
                                                        </span>
                                                    </div>
                                                </a>
                                            </td>
                                            <td><a><div>@i.Priceoreder&nbsp;руб</div></a></td>
                                            <td><a><div>@i.Tracknum</div></a></td>
                                        </tr>

                                    }
                                </tbody>
                            </table> <!--вывод заказов-->
                        }

                    </div>
                </div>
            </div>
        </div>
    </div>
</body>
</html>

@code {

    public IList<Buyer> buyer;
    public IList<Order> order;
    Order order2;
    string email, name, name2, name3;
    public List<Order> sortedorder = new List<Order>();

    protected override async Task OnInitializedAsync()
    {
        email = await oLocalStore.GetItemAsync<string>("MySessionValue");
        buyer = await Service.GetBuyer();
        order = await  Service.GetOrder();
        foreach (var i in buyer)
        {
            if (i.Emailbuyer == email)
            {
                name = i.First;
                name2 = i.Second;
                name3 = i.Third;
            }
        }

        foreach (var i in buyer)
        {
            if (i.Emailbuyer == email)
            {
                foreach (var j in order)
                {
                    if (i.Idbuyer == j.Idbuyer)
                        sortedorder.Add(j);
                }
            }
        }

    }
    public void click()
    {
        NavigationManager.NavigateTo("/Catalog");
    }
    public async void ClearSession()
    {
        Header.changeemail(null);
        Header.Email = null;
        await oLocalStore.ClearAsync();
        NavigationManager.NavigateTo("/");
    }//очистка сессии
}
